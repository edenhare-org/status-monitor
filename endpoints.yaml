# set the applicton configuration
monitor:
  # how long to delay between connection attempts.  See this 
  # value to 0 (zero) to evaluate the endpoints once.  This is 
  # one way to use the same code for AWS Lambda or as a service
  # in AWS Elastic Container Service.
  delay: 0

connection:
  # This section sets the urllib3 request configuration.
  retries: 1
  # How long do we wait for a response, in SECONDS
  timeout: 2.0
    
statuspage:
  # Statuspage.io
  apiKey: 98940f25-5813-41f2-bce6-cfdcbfd251dc
  # This example assumes you only have one page in your StatusPage
  # account. If you have multiple pages, like a public ad a private
  # page, adding the componentid and the pageid to the api/endpoint
  # section would be a good idea.
  pageId: j0wsqcqrh6y4
  # URL for the API endpoint
  baseUrl: "https://api.statuspage.io/v1"
  # how many sequential failures before we conclude the endpoint is
  # offline
  downThreshold: 5
  # how many sequential reauests with a valid response which is
  # greaster than the target response time before we send a 
  # degraded_performance status
  degradedThreshold: 5
    
cloudwatch:
  # Set this value to save the metrics to Cloudwatch.  If this
  # value is null, then no metrics are saved to CloudWatch metrics.
  namespace: # Synthetics

apiList:
  # This is a list of the endpoints/APIs we want to test.
  - name: "LabR Website"
    url: "http://www.labr.net"
    method: "GET"
    # the expected response code
    status: 200
    # The time we expected a res
    timeout: 1000
    # change the log level only for this connection
    loglevel: INFO
    # StatusPage component id.  This is used to update the operational
    # status usinjg the API or through email automation by using the 
    # API to look up the component email.
    componentid: w8c45zcrwhh4

