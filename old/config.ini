[Default]
loglevel = INFO
timeout = 3
retries = 3
# Save data to CloudWatch Metrics
cloudwatch = True
# Save data to a database
database = False
# Enable alerting
alerts = True
# The minimum delay period between checks
delay = 60
# the number of consecutive failures before alerting
downthreshold = 2
# millisecond threshold. If response time is greater than this value, 
# consider performance degraded
degradedthreshold = 100

[Alerts]
# snstopic refers to the AWS Simple Notification Service ARN where notifications
# are to go to
sns = arn:aws:sns:us-east-1:548985610555:NotifyMe
# set how often to send a message.  This value is used as a modulo operator.  If the
# down counter / frequency is zero, a message will be sent.  This value is not used
# when the state changes
frequency = 5
email = 
# The name of the python module to update status information
reporting = 

[Email]
server = smtp.mail.me.com
port = 587
authuser = chris.hare@icloud.com
authpass = mevn-igra-tzqm-mgcb
from = chris.hare@icloud.com

[Database]
host =
port = 
name = 

[Cloudwatch]
namespace = 

[StatusPage]
apiKey = 98940f25-5813-41f2-bce6-cfdcbfd251dc
pageIds = j0wsqcqrh6y4
# Do not change this value
api = https://api.statuspage.io/v1
retries = 3
timeout = 3

[labr.net]
url = http://www.labr.net
name = LabR Website
method = GET
#body = 
#headers = 
timeout = 2
retries = 2
okcode = 200
comment = LabR Website
# the number of consecutive failures before alerting
downthreshold = 2
# millisecond threshold. If response time is greater than this value, 
# consider performance degraded
degradedthreshold = 100

[qmf.farm]
url = http://www.qmf.farm
method = GET
#body = 
#headers = 
timeout = 2
retries = 2
okcode = 200
comment = nothing

[quartermoonfarm.com]
url = http://www.quartermoonfarm.com
method = GET
#body = 
#headers = 
timeout = 2
retries = 2
okcode = 200
comment = nothing
